import java_cup.runtime.*;
import java.util.*;
import java.io.*;


// operations
terminal PLUS, TIMES, MINUS,DIVIDE, CONCAT, ASSIGN;
//types
terminal FLOAT, INTEGER,STRING,CHAR,BOOL, ID;
//type definitions
terminal FLOATTYPE, INTEGERTYPE, STRINGTYPE, CHARTYPE, LISTTYPE, TUPLETYPE, BOOLTYPE; 
// punctutation
terminal  DOT, COMMA, COLON, STROKE,LCBRACK, RCBRACK,LPAREN, RPAREN,SEMI,LBRACK,RBRACK;
//keywords
terminal LEN, VOID,FDEF, IF, ELSE, WHILE, REPEAT, RETURN, UNTIL, DO;
//logica operations
terminal OR, AND, NOT;
//comparison
terminal EQ, LESS, GREATER, LESSEQ, GREATEREQ, NEQ;
//data type declaration
terminal TDEF;  

non terminal goal;
non terminal type_declr,element_list,element,type,cust_type_identifier;

start with goal;

goal ::= type_declr {: System.out.println("goal match. Parsing successfully!"); :}
	;
	
type_declr ::= TDEF ID COLON element_list SEMI {: System.out.println("typedecl ::= TDEF ID COLON element_list SEMI"); :}
	;	
	
element_list ::= element {: System.out.println("element_list ::= element"); :}
	| element_list COMMA element {: System.out.println("element_list ::= element_list COMMA element"); :}
	;
	
element ::= ID COLON type {: System.out.println("element ::= ID COLON type"); :}
	;


type ::= FLOATTYPE {:System.out.println("type ::= FLOATTYPE");:}
	| INTEGERTYPE {:System.out.println("type ::= INTEGERTYPE");:}
	| CHARTYPE {:System.out.println("type ::= CHARTYPE");:}
	| BOOLTYPE {:System.out.println("type ::= BOOLTYPE");:}
	| STRINGTYPE {:System.out.println("type ::= STRINGTYPE");:}
	| LISTTYPE {:System.out.println("type ::= LISTTYPE");:}
	| TUPLETYPE {:System.out.println("type ::= TUPLETYPE");:}
	| cust_type_identifier {:System.out.println("type ::= cust_type_identifier");:}
	;
	
cust_type_identifier ::= ID
	;	

















