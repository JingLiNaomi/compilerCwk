import java_cup.runtime.*;
import java.util.*;
import java.io.*;


// operations
terminal PLUS, TIMES, MINUS,DIVIDE, CONCAT, ASSIGN;
//types
terminal FLOAT, INTEGER,STRING,CHAR,BOOL, ID;
//type definitions
terminal FLOATTYPE, INTEGERTYPE, STRINGTYPE, CHARTYPE, LISTTYPE, TUPLETYPE, BOOLTYPE; 
// punctutation
terminal  DOT, COMMA, COLON, STROKE,LCBRACK, RCBRACK,LPAREN, RPAREN,SEMI,LBRACK,RBRACK;
//keywords
terminal LEN, VOID,FDEF, IF, ELSE, WHILE, REPEAT, RETURN, UNTIL, DO;
//logica operations
terminal OR, AND, NOT;
//comparison
terminal EQ, LESS, GREATER, LESSEQ, GREATEREQ, NEQ;
//data type declaration
terminal TDEF;  



non terminal goal;
non terminal type,cust_type_identifier;

non terminal var_declr,variable_declarator,variable_initializer,expression;




precedence left PLUS;
precedence left TIMES;



start with goal;

goal ::= var_declr {:System.out.println("goal ::= var_declr ");:}
	;
	
var_declr ::= 
		ID COLON variable_declarator SEMI {:System.out.println("var_declr ::= ID COLON variable_declarator SEMI");:}
	;
	
variable_declarator ::=
		type {:System.out.println("variable_declarator ::= type ");:}
	|	type ASSIGN variable_initializer {:System.out.println("goal ::= type EQ variable_initializer ");:}
	;
	
	
variable_initializer ::=
		expression {:System.out.println("variable_initializer ::= expression ");:}
	;	
	
type ::= FLOATTYPE {:System.out.println("type ::= FLOATTYPE");:}
	| INTEGERTYPE {:System.out.println("type ::= INTEGERTYPE");:}
	| CHARTYPE {:System.out.println("type ::= CHARTYPE");:}
	| BOOLTYPE {:System.out.println("type ::= BOOLTYPE");:}
	| STRINGTYPE {:System.out.println("type ::= STRINGTYPE");:}
	| LISTTYPE {:System.out.println("type ::= LISTTYPE");:}
	| TUPLETYPE {:System.out.println("type ::= TUPLETYPE");:}
	| cust_type_identifier
	;	
	
cust_type_identifier ::= ID
	;		
	
/*   DUMMY CODE FOR TEST   */
expression ::= INTEGER {:System.out.println("expression ::= INTEGER ");:}
	;	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	

	
	
	
	
